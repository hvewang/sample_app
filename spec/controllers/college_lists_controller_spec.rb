require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe CollegeListsController do

  def mock_college_list(stubs={})
    @mock_college_list ||= mock_model(CollegeList, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all college_lists as @college_lists" do
      CollegeList.stub(:all) { [mock_college_list] }
      get :index
      assigns(:college_lists).should eq([mock_college_list])
    end
  end

  describe "GET show" do
    it "assigns the requested college_list as @college_list" do
      CollegeList.stub(:find).with("37") { mock_college_list }
      get :show, :id => "37"
      assigns(:college_list).should be(mock_college_list)
    end
  end

  describe "GET new" do
    it "assigns a new college_list as @college_list" do
      CollegeList.stub(:new) { mock_college_list }
      get :new
      assigns(:college_list).should be(mock_college_list)
    end
  end

  describe "GET edit" do
    it "assigns the requested college_list as @college_list" do
      CollegeList.stub(:find).with("37") { mock_college_list }
      get :edit, :id => "37"
      assigns(:college_list).should be(mock_college_list)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created college_list as @college_list" do
        CollegeList.stub(:new).with({'these' => 'params'}) { mock_college_list(:save => true) }
        post :create, :college_list => {'these' => 'params'}
        assigns(:college_list).should be(mock_college_list)
      end

      it "redirects to the created college_list" do
        CollegeList.stub(:new) { mock_college_list(:save => true) }
        post :create, :college_list => {}
        response.should redirect_to(college_list_url(mock_college_list))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved college_list as @college_list" do
        CollegeList.stub(:new).with({'these' => 'params'}) { mock_college_list(:save => false) }
        post :create, :college_list => {'these' => 'params'}
        assigns(:college_list).should be(mock_college_list)
      end

      it "re-renders the 'new' template" do
        CollegeList.stub(:new) { mock_college_list(:save => false) }
        post :create, :college_list => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested college_list" do
        CollegeList.stub(:find).with("37") { mock_college_list }
        mock_college_list.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :college_list => {'these' => 'params'}
      end

      it "assigns the requested college_list as @college_list" do
        CollegeList.stub(:find) { mock_college_list(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:college_list).should be(mock_college_list)
      end

      it "redirects to the college_list" do
        CollegeList.stub(:find) { mock_college_list(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(college_list_url(mock_college_list))
      end
    end

    describe "with invalid params" do
      it "assigns the college_list as @college_list" do
        CollegeList.stub(:find) { mock_college_list(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:college_list).should be(mock_college_list)
      end

      it "re-renders the 'edit' template" do
        CollegeList.stub(:find) { mock_college_list(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested college_list" do
      CollegeList.stub(:find).with("37") { mock_college_list }
      mock_college_list.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the college_lists list" do
      CollegeList.stub(:find) { mock_college_list }
      delete :destroy, :id => "1"
      response.should redirect_to(college_lists_url)
    end
  end

end
