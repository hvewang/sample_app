require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe HighSchoolListsController do

  def mock_high_school_list(stubs={})
    @mock_high_school_list ||= mock_model(HighSchoolList, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all high_school_lists as @high_school_lists" do
      HighSchoolList.stub(:all) { [mock_high_school_list] }
      get :index
      assigns(:high_school_lists).should eq([mock_high_school_list])
    end
  end

  describe "GET show" do
    it "assigns the requested high_school_list as @high_school_list" do
      HighSchoolList.stub(:find).with("37") { mock_high_school_list }
      get :show, :id => "37"
      assigns(:high_school_list).should be(mock_high_school_list)
    end
  end

  describe "GET new" do
    it "assigns a new high_school_list as @high_school_list" do
      HighSchoolList.stub(:new) { mock_high_school_list }
      get :new
      assigns(:high_school_list).should be(mock_high_school_list)
    end
  end

  describe "GET edit" do
    it "assigns the requested high_school_list as @high_school_list" do
      HighSchoolList.stub(:find).with("37") { mock_high_school_list }
      get :edit, :id => "37"
      assigns(:high_school_list).should be(mock_high_school_list)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created high_school_list as @high_school_list" do
        HighSchoolList.stub(:new).with({'these' => 'params'}) { mock_high_school_list(:save => true) }
        post :create, :high_school_list => {'these' => 'params'}
        assigns(:high_school_list).should be(mock_high_school_list)
      end

      it "redirects to the created high_school_list" do
        HighSchoolList.stub(:new) { mock_high_school_list(:save => true) }
        post :create, :high_school_list => {}
        response.should redirect_to(high_school_list_url(mock_high_school_list))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved high_school_list as @high_school_list" do
        HighSchoolList.stub(:new).with({'these' => 'params'}) { mock_high_school_list(:save => false) }
        post :create, :high_school_list => {'these' => 'params'}
        assigns(:high_school_list).should be(mock_high_school_list)
      end

      it "re-renders the 'new' template" do
        HighSchoolList.stub(:new) { mock_high_school_list(:save => false) }
        post :create, :high_school_list => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested high_school_list" do
        HighSchoolList.stub(:find).with("37") { mock_high_school_list }
        mock_high_school_list.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :high_school_list => {'these' => 'params'}
      end

      it "assigns the requested high_school_list as @high_school_list" do
        HighSchoolList.stub(:find) { mock_high_school_list(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:high_school_list).should be(mock_high_school_list)
      end

      it "redirects to the high_school_list" do
        HighSchoolList.stub(:find) { mock_high_school_list(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(high_school_list_url(mock_high_school_list))
      end
    end

    describe "with invalid params" do
      it "assigns the high_school_list as @high_school_list" do
        HighSchoolList.stub(:find) { mock_high_school_list(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:high_school_list).should be(mock_high_school_list)
      end

      it "re-renders the 'edit' template" do
        HighSchoolList.stub(:find) { mock_high_school_list(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested high_school_list" do
      HighSchoolList.stub(:find).with("37") { mock_high_school_list }
      mock_high_school_list.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the high_school_lists list" do
      HighSchoolList.stub(:find) { mock_high_school_list }
      delete :destroy, :id => "1"
      response.should redirect_to(high_school_lists_url)
    end
  end

end
